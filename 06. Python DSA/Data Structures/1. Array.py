# ---------------------------------------------------------------------------------------------------------------------
# Arrays: Stores values in contiguous memory locations
# ---------------------------------------------------------------------------------------------------------------------
stock_price = [298, 305, 320, 301, 292]

print(id(stock_price), hex(id(stock_price)))
for price in stock_price:
    print(price, id(price), hex(id(price)))

# ---------------------------------------------------------------------------------------------------------------------
# Address:
# ---------------------------------------------------------------------------------------------------------------------
# stock_price[0] = 0x00500
# stock_price[2] = 0x00500 + (2 * sizeof(integer)) = 0x00508

# ---------------------------------------------------------------------------------------------------------------------
# Looking up an array by index: O(1) - Constant Time Operation
# ---------------------------------------------------------------------------------------------------------------------
print(stock_price[2])

# ---------------------------------------------------------------------------------------------------------------------
# Looking up an array by value: O(n)
# ---------------------------------------------------------------------------------------------------------------------
for i in range(len(stock_price)):
    if stock_price[i] == 301:
        print(i)

# ---------------------------------------------------------------------------------------------------------------------
# Array Traversal: O(n)
# ---------------------------------------------------------------------------------------------------------------------
for price in stock_price:
    print(price)

# ---------------------------------------------------------------------------------------------------------------------
# Array Insertion/Deletion: O(n) - Because of element swaps post insertion and deletion
# ---------------------------------------------------------------------------------------------------------------------
stock_price.insert(1, 284)
print(stock_price)

stock_price.remove(305)
print(stock_price)


# ---------------------------------------------------------------------------------------------------------------------
# Dynamic Arrays: Python arrays are dynamic
# ---------------------------------------------------------------------------------------------------------------------
# When a dynamic array is allocated, Python allocates certain memory for it.
# When the size exceeds, new memory with increased capacity is allocated at a different memory location and
# all values from the old memory location are copied.
# ---------------------------------------------------------------------------------------------------------------------
# New memory capacity is allocated in Geometric Progression
# Initial Capacity: n = 10 bytes (e.g.)
# New Capacity 1: n = n + (n * 2) = 30 bytes
# New Capacity 2: n = n + (n * 2) = 90 bytes
